name: Build All Platforms - Fixed

on:
  push:
    tags: [ 'v*' ]
  workflow_dispatch:

jobs:
  build-web:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: '3.35.6' }
      - run: flutter pub get
      - run: flutter build web --release
      - uses: actions/upload-artifact@v4
        with: { name: web-build, path: build/web/ }

  build-windows:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: '3.35.6' }
      - name: Enable Windows support
        run: flutter config --enable-windows-desktop
      - name: Create Windows project
        run: flutter create --platforms=windows --org com.example . || echo "Project may already exist"
      - run: flutter pub get
      - run: flutter build windows --release
      - name: Create Windows ZIP
        run: |
          $appName = (Get-Content pubspec.yaml | Select-String '^name:' | ForEach-Object { $_.Line.Split(':')[1].Trim() })
          $newPath = "build\windows\x64\runner\Release"
          $oldPath = "build\windows\runner\Release"
          if (Test-Path $newPath) {
            Compress-Archive -Path "$newPath\*" -DestinationPath "$appName-windows.zip" -Force
          } elseif (Test-Path $oldPath) {
            Compress-Archive -Path "$oldPath\*" -DestinationPath "$appName-windows.zip" -Force
          } else {
            echo "Could not find release build files."
            exit 1
          }
      - uses: actions/upload-artifact@v4
        with: { name: windows-build, path: "*-windows.zip" }

  build-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: '3.35.6' }
      - name: Enable Linux support
        run: flutter config --enable-linux-desktop
      - name: Create Linux project
        run: flutter create --platforms=linux --org com.example . || echo "Project may already exist"
      - run: |
          flutter pub get
          sudo apt-get update && sudo apt-get install -y libgtk-3-dev
      - run: flutter build linux --release
      - name: Create Linux tarball
        run: |
          appName=$(grep '^name:' pubspec.yaml | awk '{print $2}')
          tar -czf $appName-linux.tar.gz -C build/linux/x64/release/bundle/ .
      - uses: actions/upload-artifact@v4
        with: { name: linux-build, path: "*-linux.tar.gz" }

  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: subosito/flutter-action@v2
        with: { flutter-version: '3.35.6' }
      - name: Enable macOS support
        run: flutter config --enable-macos-desktop
      - name: Create macOS project
        run: flutter create --platforms=macos --org com.example . || echo "Project may already exist"
      - run: flutter pub get
      - run: flutter build macos --release
      - name: Create macOS ZIP
        run: |
          appName=$(grep '^name:' pubspec.yaml | awk '{print $2}')
          cd build/macos/Build/Products/Release/
          find . -name "*.app" -type d | head -1 | xargs -I {} zip -r ../../../../$appName-macos.zip {}
      - uses: actions/upload-artifact@v4
        with: { name: macos-build, path: "*-macos.zip" }

  release:
    runs-on: ubuntu-latest
    needs: [ build-web, build-windows, build-linux, build-macos ]
    if: startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: write

    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Prepare release assets
        run: |
          mkdir -p release_assets
          # 只复制打包好的平台文件
          cp dist/*-build/*.zip release_assets/ 2>/dev/null || true
          cp dist/*-build/*.tar.gz release_assets/ 2>/dev/null || true

          # 单独打包 web 构建
          cd dist/web-build
          zip -r ../../release_assets/web-build.zip .
          cd ../..

          ls -la release_assets/

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: release_assets/*
          generate_release_notes: true
